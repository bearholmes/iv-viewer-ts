{"version":3,"file":"iv-viewer-ts.mjs","sources":["../src/util.ts","../src/Slider.ts","../src/ImageViewer.ts","../src/FullScreen.ts"],"sourcesContent":["// constants\nexport const ZOOM_CONSTANT = 15; // increase or decrease value for zoom on mouse wheel\nexport const MOUSE_WHEEL_COUNT = 5; // A mouse delta after which it should stop preventing default behaviour of mouse wheel\n\nexport const noop = new Function();\n\n// ease out method\n/*\n    t : current time,\n    b : intial value,\n    c : changed value,\n    d : duration\n*/\nexport function easeOutQuart (\n  currentTime: number,\n  startValue: number,\n  changedValue: number,\n  duration: number,\n): number {\n  currentTime /= duration;\n  currentTime -= 1;\n  return (\n    -changedValue *\n      (currentTime * currentTime * currentTime * currentTime - 1) +\n      startValue\n  );\n}\n\ninterface CreateElementOptions {\n  tagName: string;\n  id?: string;\n  html?: string;\n  className?: string;\n  src?: string;\n  style?: string;\n  child?: Node;\n  parent: Node;\n  insertBefore?: Node;\n}\n\nexport function createElement (options: CreateElementOptions) {\n  const elem = document.createElement(options.tagName);\n  if (options.id) elem.id = options.id;\n  if (options.html) elem.innerHTML = options.html;\n  if (options.className) elem.className = options.className;\n  if (options.src && elem instanceof HTMLImageElement) {\n    const escapedSrc = encodeURIComponent(options.src);\n    elem.setAttribute('src', escapedSrc);\n  }\n  if (options.style) elem.style.cssText = options.style;\n  if (options.child) elem.appendChild(options.child);\n\n  // Insert before\n  if (options.insertBefore) {\n    options.parent.insertBefore(elem, options.insertBefore);\n\n  // Standard append\n  } else {\n    options.parent.appendChild(elem);\n  }\n\n  return elem;\n}\n\n// method to add class\nexport function addClass (el: HTMLElement, className: string): void {\n  const classNameAry = className.split(' ');\n\n  if (classNameAry.length > 1) {\n    classNameAry.forEach((classItem) => addClass(el, classItem));\n  } else if (el.classList) {\n    el.classList.add(className);\n  } else {\n    el.className += ` ${className}`;\n  }\n}\n\n// method to remove class\nexport function removeClass (el: HTMLElement, className: string): void {\n  const classNameAry = className.split(' ');\n\n  if (classNameAry.length > 1) {\n    classNameAry.forEach((classItem) => removeClass(el, classItem));\n  } else if (el.classList) {\n    el.classList.remove(className);\n  } else {\n    el.className = el.className.replace(\n      new RegExp(`(^|\\\\b)${className.split(' ').join('|')}(\\\\b|$)`, 'gi'),\n      ' ',\n    );\n  }\n}\n\n// function to check if image is loaded\nexport function imageLoaded (img: any): boolean {\n  return (\n    img.complete &&\n      (typeof img.naturalWidth === 'undefined' || img.naturalWidth !== 0)\n  );\n}\n\nexport function toArray(list: Node | NodeList | HTMLCollectionOf<HTMLElement>): (HTMLCollectionOf<Element> | Element)[] {\n  if (list instanceof HTMLElement) {\n    return [list];\n  } else if (list instanceof NodeList || list instanceof HTMLCollection) {\n    return Array.prototype.slice.call(list);\n  } else {\n    return [];\n  }\n}\n\n\n\n\ntype AnyObject = { [key: string]: any };\nexport function assign (target: AnyObject, ...rest: AnyObject[]): AnyObject {\n  rest.forEach((obj) => {\n    Object.keys(obj).forEach((key) => {\n      target[key] = obj[key];\n    });\n  });\n  return target;\n}\n\n//Node | NodeList | HTMLCollectionOf<HTMLElement>\nexport function css(elements: any, properties: any): string | undefined {\n  const elmArray = toArray(elements);\n\n  if (typeof properties === 'string') {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return window.getComputedStyle(<Element>elmArray[0])[properties];\n  }\n\n  elmArray.forEach((element) => {\n    Object.keys(properties).forEach((key:any) => {\n      (element as HTMLElement).style[key] = properties[key];\n    });\n  });\n\n  return undefined;\n}\n\n\n\nexport function removeCss(element: HTMLElement, property: string): void {\n  element.style.removeProperty(property);\n}\n\nexport function wrap(element: HTMLElement, { tag = 'div', className, id, style }: { tag?: string, className?: string, id?: string, style?: { display?: string, overflow?: string } }): HTMLElement {\n  const wrapper = document.createElement(tag);\n  if (className) wrapper.className = className;\n  if (id) wrapper.id = id;\n  if(style) {\n    if (style.display) wrapper.style.display = style.display;\n    if (style.overflow) wrapper.style.overflow = style.overflow;\n  }\n\n  const parentNode = element.parentNode;\n  if (!parentNode) {\n    throw new Error('element does not have a parent node');\n  }\n  parentNode.insertBefore(wrapper, element);\n  parentNode.removeChild(element);\n  wrapper.appendChild(element);\n  return wrapper;\n}\n\n\nexport function unwrap(element: HTMLElement) {\n  const parent = element.parentNode as HTMLElement;\n\n  if (parent && parent !== document.body) {\n    parent.parentNode?.insertBefore(element, parent);\n    parent.parentNode?.removeChild(parent);\n  }\n}\n\nexport function remove(elements: NodeListOf<Element>): void {\n  const elmArray = toArray(elements);\n  elmArray.forEach((element : any) => {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  });\n}\n\nexport function clamp(num: number, min: number, max: number): number {\n  return Math.min(Math.max(num, min), max);\n}\n\nexport function assignEvent(\n    element: HTMLElement,\n    events: string | string[],\n    handler: any,\n): () => void {\n  const eventList = Array.isArray(events) ? events : [events];\n  eventList.forEach((event) => element.addEventListener(event, handler));\n\n  return () => {\n    eventList.forEach((event) => element.removeEventListener(event, handler));\n  };\n}\n\nexport function getTouchPointsDistance(touches: TouchList): number {\n  const touch0 = touches[0];\n  const touch1 = touches[1];\n  return Math.sqrt(\n      Math.pow(touch1.pageX - touch0.pageX, 2) +\n      Math.pow(touch1.pageY - touch0.pageY, 2),\n  );\n}\n","import { noop } from './util';\n\nclass Slider {\n   private onStart: any;\n   private onMove: any;\n   private onEnd: any;\n   private isSliderEnabled: any;\n   private container: any;\n   private touchMoveEvent: string | undefined;\n   private touchEndEvent: string |undefined;\n   private sx!: number;\n   private sy!: number;\n  constructor (container: any, {\n    onStart, onMove, onEnd, isSliderEnabled,\n  }: {\n    onStart?:(x: any, y: { x: number; y: number }) => void;\n    onMove?: (x: any, y: { dx: number; dy: number; mx: number; my: number }) => void;\n    onEnd?: () => void;\n    isSliderEnabled?: any;\n  }) {\n    this.container = container;\n    this.isSliderEnabled = isSliderEnabled;\n    this.onStart = onStart || noop;\n    this.onMove = onMove || noop;\n    this.onEnd = onEnd || noop;\n  }\n\n  startHandler = (eStart: Event) => {\n    if (!this.isSliderEnabled()) return;\n\n    this.removeListeners();\n\n    eStart.preventDefault();\n\n    const { moveHandler, endHandler, onStart } = this;\n\n    const isTouchEvent = eStart.type === 'touchstart' || eStart.type === 'touchend';\n\n    let sx: number;\n    let sy: number;\n    if (isTouchEvent) {\n      const touchEvent = eStart as TouchEvent; // Cast to TouchEvent type\n      this.touchMoveEvent = 'touchmove';\n      this.touchEndEvent = 'touchend';\n      sx = touchEvent.touches[0].clientX;\n      sy = touchEvent.touches[0].clientY;\n    } else {\n      const mouseEvent = eStart as MouseEvent; // Cast to MouseEvent type\n      this.touchMoveEvent = 'mousemove';\n      this.touchEndEvent = 'mouseup';\n      sx = mouseEvent.clientX;\n      sy = mouseEvent.clientY;\n    }\n    this.sx = sx;\n    this.sy = sy;\n\n    onStart(eStart, {\n      x: this.sx,\n      y: this.sy,\n    });\n\n    // add listeners\n    document.addEventListener(this.touchMoveEvent, moveHandler);\n    document.addEventListener(this.touchEndEvent, endHandler);\n    /*\n      add end handler in context menu as well.\n      As mouseup event is not trigger on context menu open\n      https://bugs.chromium.org/p/chromium/issues/detail?id=506801\n    */\n    document.addEventListener('contextmenu', endHandler);\n  };\n\n  moveHandler = (eMove: Event) => {\n    if (!this.isSliderEnabled()) return;\n\n    eMove.preventDefault();\n    const { sx, sy, onMove } = this;\n\n    const isTouchEvent = this.touchMoveEvent === 'touchmove';\n\n    // get the coordinates\n    let mx:number;\n    let my:number;\n    if (isTouchEvent) {\n      const touchEvent = eMove as TouchEvent; // Cast to TouchEvent type\n      mx = touchEvent.touches[0].clientX;\n      my = touchEvent.touches[0].clientY;\n    } else {\n      const mouseEvent = eMove as MouseEvent; // Cast to MouseEvent type\n      mx = mouseEvent.clientX;\n      my = mouseEvent.clientY;\n    }\n\n\n    onMove(eMove, {\n      dx: mx - sx,\n      dy: my - sy,\n      mx,\n      my,\n    });\n  };\n\n  endHandler = () => {\n    if (!this.isSliderEnabled()) return;\n    this.removeListeners();\n    this.onEnd();\n  };\n\n  // remove previous events if it's not removed\n  // - Case when while sliding mouse moved out of document and released there\n  removeListeners () {\n    if (this.touchMoveEvent) document.removeEventListener(this.touchMoveEvent, this.moveHandler);\n    if (this.touchEndEvent) document.removeEventListener(this.touchEndEvent, this.endHandler);\n    document.removeEventListener('contextmenu', this.endHandler);\n  }\n\n  init () {\n    ['touchstart', 'mousedown'].forEach((evt) => {\n      this.container.addEventListener(evt, this.startHandler);\n    });\n  }\n\n  destroy () {\n    ['touchstart', 'mousedown'].forEach((evt) => {\n      this.container.removeEventListener(evt, this.startHandler);\n    });\n    this.removeListeners();\n  }\n}\n\nexport default Slider;\n","import {\n  createElement,\n  addClass,\n  removeClass,\n  css,\n  removeCss,\n  wrap,\n  unwrap,\n  remove,\n  easeOutQuart,\n  imageLoaded,\n  clamp,\n  assignEvent,\n  getTouchPointsDistance,\n  ZOOM_CONSTANT,\n  MOUSE_WHEEL_COUNT,\n} from './util';\n\n\nimport Slider from './Slider';\nimport FullScreenViewer from \"./FullScreen\";\n\n\nclass ImageViewer {\n  static defaults: any;\n  static FullScreenViewer: typeof FullScreenViewer;\n  _ev: any;\n  protected _elements: any;\n  protected _events: {\n    pinchStart?: () => void;\n    zoomOutClick?: () => void;\n    zoomInClick?: () => void;\n    mouseLeaveSnapView?: () => void;\n    mouseEnterSnapView?: () => void;\n    imageLoad?: () => void;\n    imageError?: () => void;\n    hiResImageLoad?: () => void;\n    snapViewOnMouseMove?: () => void;\n    onWindowResize?: () => void;\n    onCloseBtnClick?: () => void;\n    pinchMove?: () => void;\n    pinchEnd?: () => void;\n  };\n  private _options: {\n    zoomStep?: number;\n    zoomOnMouseWheel?: boolean;\n    refreshOnResize?: any;\n    snapView: boolean;\n    zoomValue: any;\n    maxZoom: number;\n    hasZoomButtons: any;\n    listeners: any;\n  };\n  private _listeners: any;\n  private _state: {\n    zoomSliderLength?: number;\n    snapHandleDim?: { w: number; h: number };\n    zooming?: boolean;\n    snapViewVisible?: boolean;\n    zoomValue?: any\n    loaded?: any\n    imageDim?: any\n    containerDim?: any\n    snapImageDim?: any\n  };\n  private _sliders: {\n    snapSlider?: any; imageSlider?: any; zoomSlider?: any;\n  };\n  private _frames: {\n    slideMomentumCheck?: NodeJS.Timer;\n    zoomFrame?: number;\n    snapViewTimeout?: NodeJS.Timeout;\n    sliderMomentumFrame?: number;\n  };\n  private _images: { hiResImageSrc: any; imageSrc: any };\n\n  constructor(element: any, options = {}) {\n    const {container, domElement, imageSrc, hiResImageSrc} = this._findContainerAndImageSrc(element);\n\n\n    // containers for elements\n    this._elements = {\n      container, domElement,\n    };\n\n\n    this._options = {...ImageViewer.defaults, ...options};\n\n\n    // container for all events\n    this._events = {};\n\n\n    this._listeners = this._options.listeners || {};\n\n\n    // container for all timeout and frames\n    this._frames = {};\n\n\n    // container for all sliders\n    this._sliders = {};\n\n\n    // maintain current state\n    this._state = {\n      zoomValue: this._options.zoomValue,\n    };\n\n\n    this._images = {\n      imageSrc, hiResImageSrc,\n    };\n\n\n    this._init();\n\n\n    if (imageSrc) {\n      this._loadImages();\n    }\n\n\n    // store reference of imageViewer in domElement\n    domElement._imageViewer = this;\n  }\n\n  get zoomInButton() {\n    return this._options.hasZoomButtons ? `<div class=\"iv-button-zoom--in\" role=\"button\"></div>` : '';\n  }\n\n  get zoomOutButton() {\n    return this._options.hasZoomButtons ? `<div class=\"iv-button-zoom--out\" role=\"button\"></div>` : '';\n  }\n\n  get imageViewHtml() {\n    return `\n  <div class=\"iv-loader\"></div>\n  <div class=\"iv-snap-view\">\n    <div class=\"iv-snap-image-wrap\">\n      <div class=\"iv-snap-handle\"></div>\n    </div>\n    <div class=\"iv-zoom-actions ${this._options.hasZoomButtons ? 'iv-zoom-actions--has-buttons' : ''}\">\n      ${this.zoomInButton}\n      <div class=\"iv-zoom-slider\">\n        <div class=\"iv-zoom-handle\"></div>\n      </div>\n      ${this.zoomOutButton}\n    </div>\n  </div>\n  <div class=\"iv-image-view\" >\n    <div class=\"iv-image-wrap\" ></div>\n  </div>\n`;\n  }\n\n  /**\n   * Data will be passed to the callback registered with each new instance\n   */\n  get _callbackData(): {\n    container: HTMLElement;\n    snapView: HTMLElement;\n    zoomValue: number;\n    reachedMin: boolean;\n    reachedMax: boolean;\n    instance: ImageViewer;\n  } {\n    return {\n      container: this._elements.container,\n      snapView: this._elements.snapView,\n      zoomValue: this._state.zoomValue,\n      reachedMin: Math.round(this._state.zoomValue) === this._options.zoomValue,\n      reachedMax: Math.round(this._state.zoomValue) === this._options.maxZoom,\n      instance: this,\n    };\n  }\n\n  _findContainerAndImageSrc(element: any) {\n    let domElement = element;\n    let imageSrc, hiResImageSrc;\n\n\n    if (typeof element === 'string') {\n      domElement = document.querySelector(element) as HTMLElement;\n    }\n\n\n    // throw error if imageViewer is already assigned\n    if (domElement._imageViewer) {\n      throw new Error('An image viewer is already being initiated on the element.');\n    }\n\n\n    let container = element;\n\n\n    if (domElement.tagName === 'IMG') {\n      imageSrc = domElement.src;\n      hiResImageSrc = domElement.getAttribute('high-res-src') || domElement.getAttribute('data-high-res-src');\n\n\n      // wrap the image with iv-container div\n      container = wrap(domElement, {\n        className: 'iv-container iv-image-mode', style: {display: 'inline-block', overflow: 'hidden'}\n      });\n\n\n      // hide the image and add iv-original-img class\n      css(domElement, {\n        opacity: 0, position: 'relative', zIndex: -1,\n      });\n    } else {\n      imageSrc = domElement.getAttribute('src') || domElement.getAttribute('data-src');\n      hiResImageSrc = domElement.getAttribute('high-res-src') || domElement.getAttribute('data-high-res-src');\n    }\n\n\n    return {\n      container, domElement, imageSrc, hiResImageSrc,\n    };\n  }\n\n  _init() {\n    // initialize the dom elements\n    this._initDom();\n\n\n    // initialize slider\n    this._initImageSlider();\n    this._initSnapSlider();\n    this._initZoomSlider();\n\n\n    // enable pinch and zoom feature for touch screens\n    this._pinchAndZoom();\n\n\n    // enable scroll zoom interaction\n    this._scrollZoom();\n\n\n    // enable double tap to zoom interaction\n    this._doubleTapToZoom();\n\n\n    // initialize events\n    this._initEvents();\n  }\n\n  _initDom() {\n    const {container} = this._elements;\n\n\n    // add image-viewer layout elements\n    createElement({\n      tagName: 'div', className: 'iv-wrap', html: this.imageViewHtml, parent: container,\n    });\n\n\n    // add container class on the container\n    addClass(container, 'iv-container');\n\n\n    // if the element is static position, position it relatively\n    if (css(container, 'position') === 'static') {\n      css(container, {position: 'relative'});\n    }\n\n\n    // save references for later use\n    this._elements = {\n      ...this._elements,\n      snapView: container.querySelector('.iv-snap-view'),\n      snapImageWrap: container.querySelector('.iv-snap-image-wrap'),\n      imageWrap: container.querySelector('.iv-image-wrap'),\n      snapHandle: container.querySelector('.iv-snap-handle'),\n      zoomHandle: container.querySelector('.iv-zoom-handle'),\n      zoomIn: container.querySelector('.iv-button-zoom--in'),\n      zoomOut: container.querySelector('.iv-button-zoom--out'),\n    };\n\n\n    if (this._listeners.onInit) {\n      this._listeners.onInit(this._callbackData);\n    }\n  }\n\n  _initImageSlider() {\n    const {\n      _elements,\n    } = this;\n\n\n    const {imageWrap} = _elements;\n\n\n    let positions: any, currentPos: any;\n\n\n    /* Add slide interaction to image */\n    const imageSlider = new Slider(imageWrap, {\n      isSliderEnabled: () => {\n        const {loaded, zooming, zoomValue} = this._state;\n        return loaded && !zooming && zoomValue > 100;\n      }, onStart: (_, position) => {\n        const {snapSlider} = this._sliders;\n\n\n        // clear all animation frame and interval\n        this._clearFrames();\n\n\n        snapSlider.onStart();\n\n\n        // reset positions\n        positions = [position, position];\n        currentPos = undefined;\n\n\n        this._frames.slideMomentumCheck = setInterval(() => {\n          if (!currentPos) return;\n\n\n          positions.shift();\n          positions.push({\n            x: currentPos.mx, y: currentPos.my,\n          });\n        }, 50);\n      }, onMove: (e, position) => {\n        const {snapImageDim} = this._state;\n        const {snapSlider} = this._sliders;\n        const imageCurrentDim = this._getImageCurrentDim();\n        currentPos = position;\n\n\n        snapSlider.onMove(e, {\n          dx: -position.dx * snapImageDim.w / imageCurrentDim.w, dy: -position.dy * snapImageDim.h / imageCurrentDim.h,\n        });\n      }, onEnd: () => {\n        const {snapImageDim} = this._state;\n        const {snapSlider} = this._sliders;\n        const imageCurrentDim = this._getImageCurrentDim();\n\n\n        // clear all animation frame and interval\n        this._clearFrames();\n\n\n        let step: number, positionX: number, positionY: number;\n\n\n        const xDiff = positions[1].x - positions[0].x;\n        const yDiff = positions[1].y - positions[0].y;\n\n\n        const momentum = () => {\n          if (step <= 60) {\n            this._frames.sliderMomentumFrame = requestAnimationFrame(momentum);\n          }\n\n\n          positionX += easeOutQuart(step, xDiff / 3, -xDiff / 3, 60);\n          positionY += easeOutQuart(step, yDiff / 3, -yDiff / 3, 60);\n\n\n          snapSlider.onMove(null, {\n            dx: -(positionX * snapImageDim.w / imageCurrentDim.w),\n            dy: -(positionY * snapImageDim.h / imageCurrentDim.h),\n          });\n\n\n          step++;\n        };\n\n\n        if (Math.abs(xDiff) > 30 || Math.abs(yDiff) > 30) {\n          step = 1;\n          positionX = currentPos.dx;\n          positionY = currentPos.dy;\n\n\n          momentum();\n        }\n      },\n    });\n\n\n    imageSlider.init();\n\n\n    this._sliders.imageSlider = imageSlider;\n  }\n\n  _initSnapSlider() {\n    const {\n      snapHandle,\n    } = this._elements;\n\n\n    let startHandleTop: any, startHandleLeft: any;\n\n\n    const snapSlider = new Slider(snapHandle, {\n      isSliderEnabled: () => {\n        return this._state.loaded;\n      }, onStart: () => {\n        const {slideMomentumCheck, sliderMomentumFrame} = this._frames;\n\n\n        startHandleTop = parseFloat(<string>css(snapHandle, 'top'));\n        startHandleLeft = parseFloat(<string>css(snapHandle, 'left'));\n\n\n        // stop momentum on image\n        clearInterval(slideMomentumCheck);\n        if (typeof sliderMomentumFrame === \"number\") {\n          cancelAnimationFrame(sliderMomentumFrame);\n        }\n      }, onMove: (_, position) => {\n        const {snapHandleDim, snapImageDim} = this._state;\n        const {image} = this._elements;\n\n\n        const imageCurrentDim = this._getImageCurrentDim();\n\n\n        if (!snapHandleDim) return;\n        // find handle left and top and make sure they lay between the snap image\n        const maxLeft = Math.max(snapImageDim.w - snapHandleDim.w, startHandleLeft);\n        const maxTop = Math.max(snapImageDim.h - snapHandleDim.h, startHandleTop);\n        const minLeft = Math.min(0, startHandleLeft);\n        const minTop = Math.min(0, startHandleTop);\n\n\n        const left = clamp(startHandleLeft + position.dx, minLeft, maxLeft);\n        const top = clamp(startHandleTop + position.dy, minTop, maxTop);\n\n\n        const imgLeft = -left * imageCurrentDim.w / snapImageDim.w;\n        const imgTop = -top * imageCurrentDim.h / snapImageDim.h;\n\n\n        css(snapHandle, {\n          left: `${left}px`, top: `${top}px`,\n        });\n\n\n        css(image, {\n          left: `${imgLeft}px`, top: `${imgTop}px`,\n        });\n      },\n    });\n\n\n    snapSlider.init();\n\n\n    this._sliders.snapSlider = snapSlider;\n  }\n\n  _initZoomSlider() {\n    const {snapView, zoomHandle} = this._elements;\n\n\n    // zoom in zoom out using zoom handle\n    const sliderElm = snapView.querySelector('.iv-zoom-slider');\n\n\n    let leftOffset: number, handleWidth: number;\n\n\n    // on zoom slider we have to follow the mouse and set the handle to its position.\n    const zoomSlider = new Slider(sliderElm, {\n      isSliderEnabled: () => {\n        return this._state.loaded;\n      }, onStart: (eStart) => {\n        const {zoomSlider: slider} = this._sliders;\n\n\n        leftOffset = sliderElm.getBoundingClientRect().left + document.body.scrollLeft;\n        handleWidth = parseInt(<string>css(zoomHandle, 'width'), 10);\n\n\n        // move the handle to current mouse position\n        slider.onMove(eStart);\n      }, onMove: (e) => {\n        const {maxZoom} = this._options;\n        const {zoomSliderLength} = this._state;\n\n\n        const pageX = e.pageX !== undefined ? e.pageX : e.touches[0].pageX;\n\n\n        if (!zoomSliderLength) return;\n        const newLeft = clamp(pageX - leftOffset - handleWidth / 2, 0, zoomSliderLength);\n        const zoomValue = 100 + ((maxZoom - 100) * newLeft / zoomSliderLength);\n\n\n        this.zoom(zoomValue);\n      },\n    });\n\n\n    zoomSlider.init();\n    this._sliders.zoomSlider = zoomSlider;\n  }\n\n  _initEvents() {\n    this._snapViewEvents();\n\n\n    // handle window resize\n    if (this._options.refreshOnResize) {\n      this._events.onWindowResize = assignEvent(window as any as HTMLElement, 'resize', this.refresh);\n    }\n  }\n\n  _snapViewEvents() {\n    const {imageWrap, snapView} = this._elements;\n\n\n    // show snapView on mouse move\n    this._events.snapViewOnMouseMove = assignEvent(imageWrap, ['touchmove', 'mousemove'], () => {\n      this.showSnapView();\n    });\n\n\n    // keep showing snapView if on hover over it without any timeout\n    this._events.mouseEnterSnapView = assignEvent(snapView, ['mouseenter', 'touchstart'], () => {\n      this._state.snapViewVisible = false;\n      this.showSnapView(true);\n    });\n\n\n    // on mouse leave set timeout to hide snapView\n    this._events.mouseLeaveSnapView = assignEvent(snapView, ['mouseleave', 'touchend'], () => {\n      this._state.snapViewVisible = false;\n      this.showSnapView();\n    });\n\n\n    if (!this._options.hasZoomButtons) {\n      return;\n    }\n    const {zoomOut, zoomIn} = this._elements;\n\n\n    this._events.zoomInClick = assignEvent(zoomIn, ['click'], () => {\n      this.zoom(this._state.zoomValue + (this._options.zoomStep || 50));\n    });\n\n\n    this._events.zoomOutClick = assignEvent(zoomOut, ['click'], () => {\n      this.zoom(this._state.zoomValue - (this._options.zoomStep || 50));\n    });\n  }\n\n  _pinchAndZoom() {\n    const {imageWrap, container} = this._elements;\n\n\n    // apply pinch and zoom feature\n    const onPinchStart = (eStart: TouchEvent) => {\n      const {loaded, zoomValue: startZoomValue} = this._state;\n      const {_events: events} = this;\n\n\n      if (!loaded) return;\n\n\n      const touch0 = eStart.touches[0];\n      const touch1 = eStart.touches[1];\n\n\n      if (!(touch0 && touch1)) {\n        return;\n      }\n\n\n      this._state.zooming = true;\n\n\n      const contOffset = container.getBoundingClientRect();\n\n\n      // find distance between two touch points\n      const startDist = getTouchPointsDistance(eStart.touches);\n\n\n      // find the center for the zoom\n      const center = {\n        x: (touch1.pageX + touch0.pageX) / 2 - (contOffset.left + document.body.scrollLeft),\n        y: (touch1.pageY + touch0.pageY) / 2 - (contOffset.top + document.body.scrollTop),\n      };\n\n\n      const moveListener = (eMove: TouchEvent) => {\n        // eMove.preventDefault();\n\n\n        const newDist = getTouchPointsDistance(eMove.touches);\n\n\n        const zoomValue = startZoomValue + (newDist - startDist) / 2;\n\n\n        this.zoom(zoomValue, center);\n      };\n\n\n      const endListener = (eEnd: TouchEvent) => {\n        // unbind events\n        if (events.pinchMove) events.pinchMove();\n        if (events.pinchEnd) events.pinchEnd();\n        this._state.zooming = false;\n        // properly resume move event if one finger remains\n        if (eEnd.touches.length === 1) {\n          this._sliders.imageSlider.startHandler(eEnd);\n        }\n      };\n\n\n      // remove events if already assigned\n      if (events.pinchMove) events.pinchMove();\n      if (events.pinchEnd) events.pinchEnd();\n\n\n      // assign events\n      events.pinchMove = assignEvent(document as any as HTMLElement, 'touchmove', moveListener);\n      events.pinchEnd = assignEvent(document as any as HTMLElement, 'touchend', endListener);\n    };\n\n\n    this._events.pinchStart = assignEvent(imageWrap, 'touchstart', onPinchStart);\n  }\n\n  _scrollZoom() {\n    /* Add zoom interaction in mouse wheel */\n    const {_options} = this;\n    const {container, imageWrap} = this._elements;\n\n\n    let changedDelta = 0;\n\n\n    const onMouseWheel = (e: WheelEvent) => {\n      const {loaded, zoomValue} = this._state;\n\n\n      if (!_options.zoomOnMouseWheel || !loaded) return;\n\n\n      // clear all animation frame and interval\n      this._clearFrames();\n\n\n      // cross-browser wheel delta\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const delta = Math.max(-1, Math.min(1, e.wheelDelta || -e.detail || -e.deltaY));\n\n\n      const newZoomValue = zoomValue * (100 + delta * ZOOM_CONSTANT) / 100;\n\n\n      if (!(newZoomValue >= 100 && newZoomValue <= _options.maxZoom)) {\n        changedDelta += Math.abs(delta);\n      } else {\n        changedDelta = 0;\n      }\n\n\n      e.preventDefault();\n\n\n      if (changedDelta > MOUSE_WHEEL_COUNT) return;\n\n\n      const contOffset = container.getBoundingClientRect();\n\n\n      const x = (e.pageX || e.pageX) - (contOffset.left + document.body.scrollLeft);\n      const y = (e.pageY || e.pageY) - (contOffset.top + document.body.scrollTop);\n\n\n      this.zoom(newZoomValue, {\n        x, y,\n      });\n\n\n      // show the snap viewer\n      this.showSnapView();\n    };\n\n\n    this._ev = assignEvent(imageWrap, 'wheel', onMouseWheel);\n  }\n\n  _doubleTapToZoom() {\n    const {imageWrap} = this._elements;\n    // handle double tap for zoom in and zoom out\n\n\n    let touchTime = 0;\n\n\n    let point: { x: number, y: number };\n\n\n    const onDoubleTap = (e: MouseEvent) => {\n      if (touchTime === 0) {\n        touchTime = Date.now();\n        point = {\n          x: e.pageX, y: e.pageY,\n        };\n      } else if (Date.now() - touchTime < 500 && Math.abs(e.pageX - point.x) < 50 && Math.abs(e.pageY - point.y) < 50) {\n        if (this._state.zoomValue === this._options.zoomValue) {\n          this.zoom(200);\n        } else {\n          this.resetZoom();\n        }\n        touchTime = 0;\n      } else {\n        touchTime = 0;\n      }\n    };\n\n\n    assignEvent(imageWrap, 'click', onDoubleTap);\n  }\n\n  _getImageCurrentDim() {\n    const {zoomValue, imageDim} = this._state;\n    return {\n      w: imageDim.w * (zoomValue / 100), h: imageDim.h * (zoomValue / 100),\n    };\n  }\n\n  _loadImages() {\n    const {_images, _elements} = this;\n    const {imageSrc, hiResImageSrc} = _images;\n    const {container, snapImageWrap, imageWrap} = _elements;\n\n\n    const ivLoader = container.querySelector('.iv-loader');\n\n\n    // remove old images\n    remove(container.querySelectorAll('.iv-snap-image, .iv-image'));\n\n\n    // add snapView image\n    const snapImage = createElement({\n      tagName: 'img', className: 'iv-snap-image', insertBefore: snapImageWrap.firstChild, parent: snapImageWrap,\n    });\n    (snapImage as HTMLImageElement).src = String(imageSrc);\n\n\n    // add image\n    const image = createElement({\n      tagName: 'img', className: 'iv-image iv-small-image', parent: imageWrap,\n    });\n    (image as HTMLImageElement).src = String(imageSrc);\n\n\n    this._state.loaded = false;\n    // store image reference in _elements\n    this._elements.image = image;\n    this._elements.snapImage = snapImage;\n    css(ivLoader, {display: 'block'});\n\n\n    // keep visibility hidden until image is loaded\n    css(image, {visibility: 'hidden'});\n    // hide snap view if open\n    this.hideSnapView();\n    const onImageLoad = () => {\n      // hide the iv loader\n      css(ivLoader, {display: 'none'});\n\n\n      // show the image\n      css(image, {visibility: 'visible'});\n\n\n      // load high resolution image if provided\n      if (hiResImageSrc) {\n        this._loadHighResImage(hiResImageSrc);\n      }\n\n\n      // set loaded flag to true\n      this._state.loaded = true;\n\n\n      // calculate the dimension\n      this._calculateDimensions();\n\n\n      console.log(this._listeners.onImageLoaded, 'this._listeners.onImageLoaded')\n      // dispatch image load event\n      if (this._listeners.onImageLoaded) {\n        this._listeners.onImageLoaded(this._callbackData);\n      }\n\n\n      // reset the zoom\n      this.resetZoom();\n    };\n\n\n    const onImageError = (e: any) => {\n      console.log(e, 'error', this._listeners.onImageError)\n      css(ivLoader, {display: 'none'});\n      if (this._listeners.onImageError) {\n        this._listeners.onImageError(e);\n      }\n    }\n\n\n    if (imageLoaded(image)) {\n      onImageLoad();\n    } else {\n      this._events.imageLoad = assignEvent(image, 'load', onImageLoad);\n      this._events.imageError = assignEvent(image, 'error', onImageError);\n    }\n  }\n\n  _loadHighResImage(hiResImageSrc: string) {\n    const {imageWrap, container} = this._elements;\n\n\n    const lowResImg = this._elements.image;\n\n\n    const hiResImage = createElement({\n      tagName: 'img',\n      className: 'iv-image iv-large-image',\n      src: hiResImageSrc,\n      parent: imageWrap,\n      style: lowResImg.style.cssText,\n    });\n\n\n    // add all the style attributes from lowResImg to highResImg\n    hiResImage.style.cssText = lowResImg.style.cssText;\n\n\n    this._elements.image = container.querySelectorAll('.iv-image');\n\n\n    const onHighResImageLoad = () => {\n      // remove the low size image and set this image as default image\n      remove(lowResImg);\n      this._elements.image = hiResImage;\n      // this._calculateDimensions();\n    };\n\n\n    if (imageLoaded(hiResImage)) {\n      onHighResImageLoad();\n    } else {\n      this._events.hiResImageLoad = assignEvent(hiResImage, 'load', onHighResImageLoad);\n    }\n  }\n\n  _calculateDimensions() {\n    const {image, container, snapView, snapImage, zoomHandle} = this._elements;\n\n\n    // calculate content width of image and snap image\n    const imageWidth = parseInt(<string>css(image, 'width'), 10);\n    const imageHeight = parseInt(<string>css(image, 'height'), 10);\n\n\n    const contWidth = parseInt(<string>css(container, 'width'), 10);\n    const contHeight = parseInt(<string>css(container, 'height'), 10);\n\n\n    const snapViewWidth = snapView.clientWidth;\n    const snapViewHeight = snapView.clientHeight;\n\n\n    // set the container dimension\n    this._state.containerDim = {\n      w: contWidth, h: contHeight,\n    };\n\n\n    const imgOriginWidth = image.naturalWidth || imageWidth\n    const imgOriginHeight = image.naturalHeight || imageHeight;\n\n\n    const ratio = imgOriginWidth / imgOriginHeight;\n    // set the image dimension\n    const imgWidth = (imgOriginWidth > imgOriginHeight && contHeight >= contWidth) || ratio * contHeight > contWidth ? contWidth : ratio * contHeight;\n\n\n    const imgHeight = imgWidth / ratio;\n\n\n    this._state.imageDim = {\n      w: imgWidth, h: imgHeight,\n    };\n\n\n    // reset image position and zoom\n    css(image, {\n      width: `${imgWidth}px`,\n      height: `${imgHeight}px`,\n      left: `${(contWidth - imgWidth) / 2}px`,\n      top: `${(contHeight - imgHeight) / 2}px`,\n      maxWidth: 'none',\n      maxHeight: 'none',\n    });\n\n\n    // set the snap Image dimension\n    const snapWidth = imgWidth > imgHeight ? snapViewWidth : imgWidth * snapViewHeight / imgHeight;\n    const snapHeight = imgHeight > imgWidth ? snapViewHeight : imgHeight * snapViewWidth / imgWidth;\n\n\n    this._state.snapImageDim = {\n      w: snapWidth, h: snapHeight,\n    };\n\n\n    css(snapImage, {\n      width: `${snapWidth}px`, height: `${snapHeight}px`,\n    });\n\n\n    const zoomSlider = snapView.querySelector('.iv-zoom-slider').clientWidth;\n    // calculate zoom slider area\n    this._state.zoomSliderLength = zoomSlider - zoomHandle.offsetWidth;\n  }\n\n  resetZoom(animate = true) {\n    const {zoomValue} = this._options;\n\n\n    if (!animate) {\n      this._state.zoomValue = zoomValue;\n    }\n\n\n    this.zoom(zoomValue);\n  }\n\n  zoom = (perc: number, point?: any) => {\n    const {_options, _elements, _state} = this;\n    const {zoomValue: curPerc, imageDim, containerDim, zoomSliderLength} = _state;\n    const {image, zoomHandle} = _elements;\n    const {maxZoom} = _options;\n\n\n    perc = Math.round(Math.max(100, perc));\n    perc = Math.min(maxZoom, perc);\n\n\n    point = point || {\n      x: containerDim.w / 2, y: containerDim.h / 2,\n    };\n\n\n    const curLeft = parseFloat(<string>css(image, 'left'));\n    const curTop = parseFloat(<string>css(image, 'top'));\n\n\n    // clear any panning frames\n    this._clearFrames();\n\n\n    let step = 0;\n\n\n    const baseLeft = (containerDim.w - imageDim.w) / 2;\n    const baseTop = (containerDim.h - imageDim.h) / 2;\n    const baseRight = containerDim.w - baseLeft;\n    const baseBottom = containerDim.h - baseTop;\n\n\n    const zoom = () => {\n      step++;\n\n\n      if (step < 16) {\n        this._frames.zoomFrame = requestAnimationFrame(zoom);\n      }\n\n\n      const tickZoom = easeOutQuart(step, curPerc, perc - curPerc, 16);\n      const ratio = tickZoom / curPerc;\n\n\n      const imgWidth = imageDim.w * tickZoom / 100;\n      const imgHeight = imageDim.h * tickZoom / 100;\n\n\n      let newLeft = -((point.x - curLeft) * ratio - point.x);\n      let newTop = -((point.y - curTop) * ratio - point.y);\n\n\n      // fix for left and top\n      newLeft = Math.min(newLeft, baseLeft);\n      newTop = Math.min(newTop, baseTop);\n\n\n      // fix for right and bottom\n      if (newLeft + imgWidth < baseRight) {\n        newLeft = baseRight - imgWidth; // newLeft - (newLeft + imgWidth - baseRight)\n      }\n\n\n      if (newTop + imgHeight < baseBottom) {\n        newTop = baseBottom - imgHeight; // newTop + (newTop + imgHeight - baseBottom)\n      }\n\n\n      css(image, {\n        height: `${imgHeight}px`, width: `${imgWidth}px`, left: `${newLeft}px`, top: `${newTop}px`,\n      });\n\n\n      this._state.zoomValue = tickZoom;\n\n\n      this._resizeSnapHandle(imgWidth, imgHeight, newLeft, newTop);\n\n\n      // update zoom handle position\n      css(zoomHandle, {\n        left: `${(tickZoom - 100) * (zoomSliderLength || 0) / (maxZoom - 100)}px`,\n      });\n\n\n      // dispatch zoom changed event\n      if (this._listeners.onZoomChange) {\n        this._listeners.onZoomChange(this._callbackData);\n      }\n    };\n\n\n    zoom();\n  };\n\n  _clearFrames = () => {\n    const {slideMomentumCheck, sliderMomentumFrame, zoomFrame} = this._frames;\n    clearInterval(slideMomentumCheck);\n    if (typeof sliderMomentumFrame === \"number\") {\n      cancelAnimationFrame(sliderMomentumFrame);\n    }\n    if (typeof zoomFrame === \"number\") {\n      cancelAnimationFrame(zoomFrame);\n    }\n  };\n\n  _resizeSnapHandle = (imgWidth: number, imgHeight: number, imgLeft: number, imgTop: number) => {\n    const {_elements, _state} = this;\n    const {snapHandle, image} = _elements;\n    const {imageDim, containerDim, zoomValue, snapImageDim} = _state;\n\n\n    const imageWidth = imgWidth || imageDim.w * zoomValue / 100;\n    const imageHeight = imgHeight || imageDim.h * zoomValue / 100;\n    const imageLeft = imgLeft || parseFloat(<string>css(image, 'left'));\n    const imageTop = imgTop || parseFloat(<string>css(image, 'top'));\n\n\n    const left = -imageLeft * snapImageDim.w / imageWidth;\n    const top = -imageTop * snapImageDim.h / imageHeight;\n\n\n    const handleWidth = (containerDim.w * snapImageDim.w) / imageWidth;\n    const handleHeight = (containerDim.h * snapImageDim.h) / imageHeight;\n\n\n    css(snapHandle, {\n      top: `${top}px`, left: `${left}px`, width: `${handleWidth}px`, height: `${handleHeight}px`,\n    });\n\n\n    this._state.snapHandleDim = {\n      w: handleWidth, h: handleHeight,\n    };\n  };\n\n  showSnapView = (noTimeout?: boolean) => {\n    const {snapViewVisible, zoomValue, loaded} = this._state;\n    const {snapView} = this._elements;\n\n\n    if (!this._options.snapView) return;\n\n\n    if (snapViewVisible || zoomValue <= 100 || !loaded) return;\n\n\n    clearTimeout(this._frames.snapViewTimeout);\n\n\n    this._state.snapViewVisible = true;\n\n\n    css(snapView, {opacity: 1, pointerEvents: 'inherit'});\n\n\n    if (!noTimeout) {\n      this._frames.snapViewTimeout = setTimeout(this.hideSnapView, 1500);\n    }\n  };\n\n  hideSnapView = () => {\n    const {snapView} = this._elements;\n    css(snapView, {opacity: 0, pointerEvents: 'none'});\n    this._state.snapViewVisible = false;\n  };\n\n  refresh = () => {\n    this._calculateDimensions();\n    this.resetZoom();\n  };\n\n  load(imageSrc: string, hiResImageSrc: string) {\n    this._images = {\n      imageSrc, hiResImageSrc,\n    };\n\n\n    this._loadImages();\n  }\n\n  destroy() {\n    const {container, domElement} = this._elements;\n    // destroy all the sliders\n    Object.entries(this._sliders).forEach(([, slider]: [string, Slider]) => {\n      slider.destroy();\n    });\n\n\n    // unbind all events\n    Object.entries(this._events).forEach(([, unbindEvent]: [string, () => void]) => {\n      unbindEvent();\n    });\n\n\n    // clear all the frames\n    this._clearFrames();\n\n\n    // remove html from the container\n    remove(container.querySelector('.iv-wrap'));\n\n\n    // remove iv-container class from container\n    removeClass(container, 'iv-container');\n\n\n    // remove added style from container\n    removeCss(document.querySelector('html') as HTMLElement, 'relative');\n\n\n    // if container has original image, unwrap the image and remove the class\n    // which will happen when domElement is not the container\n    if (domElement !== container) {\n      unwrap(domElement);\n    }\n\n\n    // remove imageViewer reference from dom element\n    domElement._imageViewer = null;\n\n\n    if (this._listeners.onDestroy) {\n      this._listeners.onDestroy();\n    }\n  }\n}\n\n\nImageViewer.defaults = {\n  zoomValue: 100,\n  snapView: true,\n  maxZoom: 500,\n  refreshOnResize: true,\n  zoomOnMouseWheel: true,\n  hasZoomButtons: false,\n  zoomStep: 50,\n  listeners: {\n    onInit: null, onDestroy: null, onImageLoaded: null, onZoomChange: null, onImageError: null\n  },\n};\n\n\nexport default ImageViewer;\n","import { createElement, assignEvent, css, remove, removeCss } from './util';\nimport ImageViewer from './ImageViewer';\n\nconst fullScreenHtml = `\n  <div class=\"iv-fullscreen-container\"></div>\n  <div class=\"iv-fullscreen-close\"></div>\n`;\n\nclass FullScreenViewer extends ImageViewer {\n  constructor (options = {}) {\n    const fullScreenElem = createElement({\n      tagName: 'div',\n      className: 'iv-fullscreen',\n      html: fullScreenHtml,\n      parent: document.body,\n    });\n\n    const container = fullScreenElem.querySelector('.iv-fullscreen-container');\n\n    // call the ImageViewer constructor\n    super(container, { ...options, refreshOnResize: false });\n\n    // add fullScreenElem on element list\n    this._elements.fullScreen = fullScreenElem;\n\n    this._initFullScreenEvents();\n  }\n  _initFullScreenEvents () {\n    const { fullScreen } = this._elements;\n    const closeBtn = fullScreen.querySelector('.iv-fullscreen-close') as HTMLElement;\n\n    // add close button event\n    this._events.onCloseBtnClick = assignEvent(closeBtn, 'click', this.hide);\n  }\n  show (imageSrc : string, hiResImageSrc: string) {\n    // show the element\n    css(this._elements.fullScreen, { display: 'block' });\n\n    // if image source is provide load image source\n    if (imageSrc) {\n      this.load(imageSrc, hiResImageSrc);\n    }\n\n    // handle window resize\n    this._events.onWindowResize = assignEvent(window  as any as HTMLElement, 'resize', this.refresh);\n\n    // disable scroll on html\n    css(document.querySelector('html') as HTMLElement, { overflow: 'hidden' });\n  }\n  hide = () => {\n    // hide the fullscreen\n    css(this._elements.fullScreen, { display: 'none' });\n\n    // enable scroll\n    removeCss(document.querySelector('html') as HTMLElement, 'overflow');\n\n    // remove window event\n    if (this._events.onWindowResize) this._events.onWindowResize();\n  };\n  destroy () {\n    const { fullScreen } = this._elements;\n\n    // destroy image viewer\n    super.destroy();\n\n    // remove the element\n    remove(fullScreen);\n  }\n}\n\nexport default FullScreenViewer;\n"],"names":["noop","easeOutQuart","currentTime","startValue","changedValue","duration","createElement","options","elem","escapedSrc","addClass","el","className","classNameAry","classItem","removeClass","imageLoaded","img","toArray","list","css","elements","properties","elmArray","element","key","removeCss","property","wrap","tag","id","style","wrapper","parentNode","unwrap","parent","remove","clamp","num","min","max","assignEvent","events","handler","eventList","event","getTouchPointsDistance","touches","touch0","touch1","Slider","container","onStart","onMove","onEnd","isSliderEnabled","eStart","moveHandler","endHandler","isTouchEvent","sx","sy","touchEvent","mouseEvent","eMove","mx","my","evt","ImageViewer","domElement","imageSrc","hiResImageSrc","_elements","imageWrap","positions","currentPos","imageSlider","loaded","zooming","zoomValue","_","position","snapSlider","e","snapImageDim","imageCurrentDim","step","positionX","positionY","xDiff","yDiff","momentum","snapHandle","startHandleTop","startHandleLeft","slideMomentumCheck","sliderMomentumFrame","snapHandleDim","image","maxLeft","maxTop","minLeft","minTop","left","top","imgLeft","imgTop","snapView","zoomHandle","sliderElm","leftOffset","handleWidth","zoomSlider","slider","maxZoom","zoomSliderLength","pageX","newLeft","zoomOut","zoomIn","onPinchStart","startZoomValue","contOffset","startDist","center","moveListener","newDist","endListener","eEnd","_options","changedDelta","onMouseWheel","delta","newZoomValue","x","y","touchTime","point","imageDim","_images","snapImageWrap","ivLoader","snapImage","onImageLoad","onImageError","lowResImg","hiResImage","onHighResImageLoad","imageWidth","imageHeight","contWidth","contHeight","snapViewWidth","snapViewHeight","imgOriginWidth","imgOriginHeight","ratio","imgWidth","imgHeight","snapWidth","snapHeight","animate","perc","_state","curPerc","containerDim","curLeft","curTop","baseLeft","baseTop","baseRight","baseBottom","zoom","tickZoom","newTop","zoomFrame","imageLeft","imageTop","handleHeight","noTimeout","snapViewVisible","unbindEvent","fullScreenHtml","FullScreenViewer","fullScreenElem","fullScreen","closeBtn"],"mappings":"AAIa,MAAAA,IAAO,IAAI;AASjB,SAASC,EACdC,GACAC,GACAC,GACAC,GACQ;AACO,SAAAH,KAAAG,GACAH,KAAA,GAEb,CAACE,KACEF,IAAcA,IAAcA,IAAcA,IAAc,KACzDC;AAEN;AAcO,SAASG,EAAeC,GAA+B;AAC5D,QAAMC,IAAO,SAAS,cAAcD,EAAQ,OAAO;AAI/C,MAHAA,EAAQ,OAAIC,EAAK,KAAKD,EAAQ,KAC9BA,EAAQ,SAAMC,EAAK,YAAYD,EAAQ,OACvCA,EAAQ,cAAWC,EAAK,YAAYD,EAAQ,YAC5CA,EAAQ,OAAOC,aAAgB,kBAAkB;AAC7C,UAAAC,IAAa,mBAAmBF,EAAQ,GAAG;AAC5C,IAAAC,EAAA,aAAa,OAAOC,CAAU;AAAA;AAErC,SAAIF,EAAQ,UAAYC,EAAA,MAAM,UAAUD,EAAQ,QAC5CA,EAAQ,SAAYC,EAAA,YAAYD,EAAQ,KAAK,GAG7CA,EAAQ,eACVA,EAAQ,OAAO,aAAaC,GAAMD,EAAQ,YAAY,IAI9CA,EAAA,OAAO,YAAYC,CAAI,GAG1BA;AACT;AAGgB,SAAAE,EAAUC,GAAiBC,GAAyB;AAC5D,QAAAC,IAAeD,EAAU,MAAM,GAAG;AAEpC,EAAAC,EAAa,SAAS,IACxBA,EAAa,QAAQ,CAACC,MAAcJ,EAASC,GAAIG,CAAS,CAAC,IAClDH,EAAG,YACTA,EAAA,UAAU,IAAIC,CAAS,IAE1BD,EAAG,aAAa,IAAIC;AAExB;AAGgB,SAAAG,EAAaJ,GAAiBC,GAAyB;AAC/D,QAAAC,IAAeD,EAAU,MAAM,GAAG;AAEpC,EAAAC,EAAa,SAAS,IACxBA,EAAa,QAAQ,CAACC,MAAcC,EAAYJ,GAAIG,CAAS,CAAC,IACrDH,EAAG,YACTA,EAAA,UAAU,OAAOC,CAAS,IAE1BD,EAAA,YAAYA,EAAG,UAAU;AAAA,IAC1B,IAAI,OAAO,UAAUC,EAAU,MAAM,GAAG,EAAE,KAAK,GAAG,YAAY,IAAI;AAAA,IAClE;AAAA,EAAA;AAGN;AAGO,SAASI,EAAaC,GAAmB;AAC9C,SACEA,EAAI,aACD,OAAOA,EAAI,eAAiB,OAAeA,EAAI,iBAAiB;AAEvE;AAEO,SAASC,EAAQC,GAAgG;AACtH,SAAIA,aAAgB,cACX,CAACA,CAAI,IACHA,aAAgB,YAAYA,aAAgB,iBAC9C,MAAM,UAAU,MAAM,KAAKA,CAAI,IAE/B;AAEX;AAgBgB,SAAAC,EAAIC,GAAeC,GAAqC;AAChE,QAAAC,IAAWL,EAAQG,CAAQ;AAE7B,MAAA,OAAOC,KAAe;AAGxB,WAAO,OAAO,iBAA0BC,EAAS,CAAC,CAAC,EAAED,CAAU;AAGxD,EAAAC,EAAA,QAAQ,CAACC,MAAY;AAC5B,WAAO,KAAKF,CAAU,EAAE,QAAQ,CAACG,MAAY;AAC1C,MAAAD,EAAwB,MAAMC,CAAG,IAAIH,EAAWG,CAAG;AAAA,IAAA,CACrD;AAAA,EAAA,CACF;AAGH;AAIgB,SAAAC,EAAUF,GAAsBG,GAAwB;AAC9D,EAAAH,EAAA,MAAM,eAAeG,CAAQ;AACvC;AAEgB,SAAAC,EAAKJ,GAAsB,EAAE,KAAAK,IAAM,OAAO,WAAAjB,GAAW,IAAAkB,GAAI,OAAAC,KAA0H;AAC3L,QAAAC,IAAU,SAAS,cAAcH,CAAG;AACtC,EAAAjB,MAAWoB,EAAQ,YAAYpB,IAC/BkB,MAAIE,EAAQ,KAAKF,IAClBC,MACGA,EAAM,YAAiBC,EAAA,MAAM,UAAUD,EAAM,UAC7CA,EAAM,aAAkBC,EAAA,MAAM,WAAWD,EAAM;AAGrD,QAAME,IAAaT,EAAQ;AAC3B,MAAI,CAACS;AACG,UAAA,IAAI,MAAM,qCAAqC;AAE5C,SAAAA,EAAA,aAAaD,GAASR,CAAO,GACxCS,EAAW,YAAYT,CAAO,GAC9BQ,EAAQ,YAAYR,CAAO,GACpBQ;AACT;AAGO,SAASE,EAAOV,GAAsB;AAC3C,QAAMW,IAASX,EAAQ;AAEnB,EAAAW,KAAUA,MAAW,SAAS,SACzBA,EAAA,YAAY,aAAaX,GAASW,CAAM,GACxCA,EAAA,YAAY,YAAYA,CAAM;AAEzC;AAEO,SAASC,EAAOf,GAAqC;AAEjD,EADQH,EAAQG,CAAQ,EACxB,QAAQ,CAACG,MAAkB;AAClC,IAAIA,EAAQ,cACFA,EAAA,WAAW,YAAYA,CAAO;AAAA,EACxC,CACD;AACH;AAEgB,SAAAa,EAAMC,GAAaC,GAAaC,GAAqB;AACnE,SAAO,KAAK,IAAI,KAAK,IAAIF,GAAKC,CAAG,GAAGC,CAAG;AACzC;AAEgB,SAAAC,EACZjB,GACAkB,GACAC,GACU;AACZ,QAAMC,IAAY,MAAM,QAAQF,CAAM,IAAIA,IAAS,CAACA,CAAM;AAC1D,SAAAE,EAAU,QAAQ,CAACC,MAAUrB,EAAQ,iBAAiBqB,GAAOF,CAAO,CAAC,GAE9D,MAAM;AACX,IAAAC,EAAU,QAAQ,CAACC,MAAUrB,EAAQ,oBAAoBqB,GAAOF,CAAO,CAAC;AAAA,EAAA;AAE5E;AAEO,SAASG,EAAuBC,GAA4B;AAC3D,QAAAC,IAASD,EAAQ,CAAC,GAClBE,IAASF,EAAQ,CAAC;AACxB,SAAO,KAAK;AAAA,IACR,KAAK,IAAIE,EAAO,QAAQD,EAAO,OAAO,CAAC,IACvC,KAAK,IAAIC,EAAO,QAAQD,EAAO,OAAO,CAAC;AAAA,EAAA;AAE7C;ACjNA,MAAME,EAAO;AAAA,EACF;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACT,YAAaC,GAAgB;AAAA,IAC3B,SAAAC;AAAA,IAAS,QAAAC;AAAA,IAAQ,OAAAC;AAAA,IAAO,iBAAAC;AAAA,EAAA,GAMvB;AACD,SAAK,YAAYJ,GACjB,KAAK,kBAAkBI,GACvB,KAAK,UAAUH,KAAWpD,GAC1B,KAAK,SAASqD,KAAUrD,GACxB,KAAK,QAAQsD,KAAStD;AAAA,EACxB;AAAA,EAEA,eAAe,CAACwD,MAAkB;AAC5B,QAAA,CAAC,KAAK,gBAAgB;AAAG;AAE7B,SAAK,gBAAgB,GAErBA,EAAO,eAAe;AAEtB,UAAM,EAAE,aAAAC,GAAa,YAAAC,GAAY,SAAAN,EAAA,IAAY,MAEvCO,IAAeH,EAAO,SAAS,gBAAgBA,EAAO,SAAS;AAEjE,QAAAI,GACAC;AACJ,QAAIF,GAAc;AAChB,YAAMG,IAAaN;AACnB,WAAK,iBAAiB,aACtB,KAAK,gBAAgB,YAChBI,IAAAE,EAAW,QAAQ,CAAC,EAAE,SACtBD,IAAAC,EAAW,QAAQ,CAAC,EAAE;AAAA,WACtB;AACL,YAAMC,IAAaP;AACnB,WAAK,iBAAiB,aACtB,KAAK,gBAAgB,WACrBI,IAAKG,EAAW,SAChBF,IAAKE,EAAW;AAAA;AAElB,SAAK,KAAKH,GACV,KAAK,KAAKC,GAEVT,EAAQI,GAAQ;AAAA,MACd,GAAG,KAAK;AAAA,MACR,GAAG,KAAK;AAAA,IAAA,CACT,GAGQ,SAAA,iBAAiB,KAAK,gBAAgBC,CAAW,GACjD,SAAA,iBAAiB,KAAK,eAAeC,CAAU,GAM/C,SAAA,iBAAiB,eAAeA,CAAU;AAAA,EAAA;AAAA,EAGrD,cAAc,CAACM,MAAiB;AAC1B,QAAA,CAAC,KAAK,gBAAgB;AAAG;AAE7B,IAAAA,EAAM,eAAe;AACrB,UAAM,EAAE,IAAAJ,GAAI,IAAAC,GAAI,QAAAR,EAAA,IAAW,MAErBM,IAAe,KAAK,mBAAmB;AAGzC,QAAAM,GACAC;AACJ,QAAIP,GAAc;AAChB,YAAMG,IAAaE;AACd,MAAAC,IAAAH,EAAW,QAAQ,CAAC,EAAE,SACtBI,IAAAJ,EAAW,QAAQ,CAAC,EAAE;AAAA,WACtB;AACL,YAAMC,IAAaC;AACnB,MAAAC,IAAKF,EAAW,SAChBG,IAAKH,EAAW;AAAA;AAIlB,IAAAV,EAAOW,GAAO;AAAA,MACZ,IAAIC,IAAKL;AAAA,MACT,IAAIM,IAAKL;AAAA,MACT,IAAAI;AAAA,MACA,IAAAC;AAAA,IAAA,CACD;AAAA,EAAA;AAAA,EAGH,aAAa,MAAM;AACb,IAAC,KAAK,gBAAgB,MAC1B,KAAK,gBAAgB,GACrB,KAAK,MAAM;AAAA,EAAA;AAAA;AAAA;AAAA,EAKb,kBAAmB;AACjB,IAAI,KAAK,kBAAgB,SAAS,oBAAoB,KAAK,gBAAgB,KAAK,WAAW,GACvF,KAAK,iBAAe,SAAS,oBAAoB,KAAK,eAAe,KAAK,UAAU,GAC/E,SAAA,oBAAoB,eAAe,KAAK,UAAU;AAAA,EAC7D;AAAA,EAEA,OAAQ;AACN,KAAC,cAAc,WAAW,EAAE,QAAQ,CAACC,MAAQ;AAC3C,WAAK,UAAU,iBAAiBA,GAAK,KAAK,YAAY;AAAA,IAAA,CACvD;AAAA,EACH;AAAA,EAEA,UAAW;AACT,KAAC,cAAc,WAAW,EAAE,QAAQ,CAACA,MAAQ;AAC3C,WAAK,UAAU,oBAAoBA,GAAK,KAAK,YAAY;AAAA,IAAA,CAC1D,GACD,KAAK,gBAAgB;AAAA,EACvB;AACF;ACzGA,MAAMC,EAAY;AAAA,EAChB,OAAO;AAAA,EACP,OAAO;AAAA,EACP;AAAA,EACU;AAAA,EACA;AAAA,EAeF;AAAA,EAUA;AAAA,EACA;AAAA,EAWA;AAAA,EAGA;AAAA,EAMA;AAAA,EAER,YAAY5C,GAAcjB,IAAU,IAAI;AAChC,UAAA,EAAC,WAAA4C,GAAW,YAAAkB,GAAY,UAAAC,GAAU,eAAAC,MAAiB,KAAK,0BAA0B/C,CAAO;AAI/F,SAAK,YAAY;AAAA,MACf,WAAA2B;AAAA,MAAW,YAAAkB;AAAA,IAAA,GAIb,KAAK,WAAW,EAAC,GAAGD,EAAY,UAAU,GAAG7D,KAI7C,KAAK,UAAU,IAGf,KAAK,aAAa,KAAK,SAAS,aAAa,CAAA,GAI7C,KAAK,UAAU,IAIf,KAAK,WAAW,IAIhB,KAAK,SAAS;AAAA,MACZ,WAAW,KAAK,SAAS;AAAA,IAAA,GAI3B,KAAK,UAAU;AAAA,MACb,UAAA+D;AAAA,MAAU,eAAAC;AAAA,IAAA,GAIZ,KAAK,MAAM,GAGPD,KACF,KAAK,YAAY,GAKnBD,EAAW,eAAe;AAAA,EAC5B;AAAA,EAEA,IAAI,eAAe;AACV,WAAA,KAAK,SAAS,iBAAiB,yDAAyD;AAAA,EACjG;AAAA,EAEA,IAAI,gBAAgB;AACX,WAAA,KAAK,SAAS,iBAAiB,0DAA0D;AAAA,EAClG;AAAA,EAEA,IAAI,gBAAgB;AACX,WAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAMuB,KAAK,SAAS,iBAAiB,iCAAiC;AAAA,QAC1F,KAAK;AAAA;AAAA;AAAA;AAAA,QAIL,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOX;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,gBAOF;AACO,WAAA;AAAA,MACL,WAAW,KAAK,UAAU;AAAA,MAC1B,UAAU,KAAK,UAAU;AAAA,MACzB,WAAW,KAAK,OAAO;AAAA,MACvB,YAAY,KAAK,MAAM,KAAK,OAAO,SAAS,MAAM,KAAK,SAAS;AAAA,MAChE,YAAY,KAAK,MAAM,KAAK,OAAO,SAAS,MAAM,KAAK,SAAS;AAAA,MAChE,UAAU;AAAA,IAAA;AAAA,EAEd;AAAA,EAEA,0BAA0B7C,GAAc;AACtC,QAAI6C,IAAa7C,GACb8C,GAAUC;AASd,QANI,OAAO/C,KAAY,aACR6C,IAAA,SAAS,cAAc7C,CAAO,IAKzC6C,EAAW;AACP,YAAA,IAAI,MAAM,4DAA4D;AAI9E,QAAIlB,IAAY3B;AAGZ,WAAA6C,EAAW,YAAY,SACzBC,IAAWD,EAAW,KACtBE,IAAgBF,EAAW,aAAa,cAAc,KAAKA,EAAW,aAAa,mBAAmB,GAItGlB,IAAYvB,EAAKyC,GAAY;AAAA,MAC3B,WAAW;AAAA,MAA8B,OAAO,EAAC,SAAS,gBAAgB,UAAU,SAAQ;AAAA,IAAA,CAC7F,GAIDjD,EAAIiD,GAAY;AAAA,MACd,SAAS;AAAA,MAAG,UAAU;AAAA,MAAY,QAAQ;AAAA,IAAA,CAC3C,MAEDC,IAAWD,EAAW,aAAa,KAAK,KAAKA,EAAW,aAAa,UAAU,GAC/EE,IAAgBF,EAAW,aAAa,cAAc,KAAKA,EAAW,aAAa,mBAAmB,IAIjG;AAAA,MACL,WAAAlB;AAAA,MAAW,YAAAkB;AAAA,MAAY,UAAAC;AAAA,MAAU,eAAAC;AAAA,IAAA;AAAA,EAErC;AAAA,EAEA,QAAQ;AAEN,SAAK,SAAS,GAId,KAAK,iBAAiB,GACtB,KAAK,gBAAgB,GACrB,KAAK,gBAAgB,GAIrB,KAAK,cAAc,GAInB,KAAK,YAAY,GAIjB,KAAK,iBAAiB,GAItB,KAAK,YAAY;AAAA,EACnB;AAAA,EAEA,WAAW;AACH,UAAA,EAAC,WAAApB,EAAS,IAAI,KAAK;AAIX,IAAA7C,EAAA;AAAA,MACZ,SAAS;AAAA,MAAO,WAAW;AAAA,MAAW,MAAM,KAAK;AAAA,MAAe,QAAQ6C;AAAA,IAAA,CACzE,GAIDzC,EAASyC,GAAW,cAAc,GAI9B/B,EAAI+B,GAAW,UAAU,MAAM,YACjC/B,EAAI+B,GAAW,EAAC,UAAU,WAAW,CAAA,GAKvC,KAAK,YAAY;AAAA,MACf,GAAG,KAAK;AAAA,MACR,UAAUA,EAAU,cAAc,eAAe;AAAA,MACjD,eAAeA,EAAU,cAAc,qBAAqB;AAAA,MAC5D,WAAWA,EAAU,cAAc,gBAAgB;AAAA,MACnD,YAAYA,EAAU,cAAc,iBAAiB;AAAA,MACrD,YAAYA,EAAU,cAAc,iBAAiB;AAAA,MACrD,QAAQA,EAAU,cAAc,qBAAqB;AAAA,MACrD,SAASA,EAAU,cAAc,sBAAsB;AAAA,IAAA,GAIrD,KAAK,WAAW,UACb,KAAA,WAAW,OAAO,KAAK,aAAa;AAAA,EAE7C;AAAA,EAEA,mBAAmB;AACX,UAAA;AAAA,MACJ,WAAAqB;AAAA,IACE,IAAA,MAGE,EAAC,WAAAC,EAAa,IAAAD;AAGpB,QAAIE,GAAgBC;AAId,UAAAC,IAAc,IAAI1B,EAAOuB,GAAW;AAAA,MACxC,iBAAiB,MAAM;AACrB,cAAM,EAAC,QAAAI,GAAQ,SAAAC,GAAS,WAAAC,EAAA,IAAa,KAAK;AACnC,eAAAF,KAAU,CAACC,KAAWC,IAAY;AAAA,MAC3C;AAAA,MAAG,SAAS,CAACC,GAAGC,MAAa;AACrB,cAAA,EAAC,YAAAC,EAAU,IAAI,KAAK;AAI1B,aAAK,aAAa,GAGlBA,EAAW,QAAQ,GAIPR,IAAA,CAACO,GAAUA,CAAQ,GAClBN,IAAA,QAGR,KAAA,QAAQ,qBAAqB,YAAY,MAAM;AAClD,UAAKA,MAGLD,EAAU,MAAM,GAChBA,EAAU,KAAK;AAAA,YACb,GAAGC,EAAW;AAAA,YAAI,GAAGA,EAAW;AAAA,UAAA,CACjC;AAAA,WACA,EAAE;AAAA,MACP;AAAA,MAAG,QAAQ,CAACQ,GAAGF,MAAa;AACpB,cAAA,EAAC,cAAAG,EAAY,IAAI,KAAK,QACtB,EAAC,YAAAF,EAAU,IAAI,KAAK,UACpBG,IAAkB,KAAK;AAChB,QAAAV,IAAAM,GAGbC,EAAW,OAAOC,GAAG;AAAA,UACnB,IAAI,CAACF,EAAS,KAAKG,EAAa,IAAIC,EAAgB;AAAA,UAAG,IAAI,CAACJ,EAAS,KAAKG,EAAa,IAAIC,EAAgB;AAAA,QAAA,CAC5G;AAAA,MACH;AAAA,MAAG,OAAO,MAAM;AACR,cAAA,EAAC,cAAAD,EAAY,IAAI,KAAK,QACtB,EAAC,YAAAF,EAAU,IAAI,KAAK,UACpBG,IAAkB,KAAK;AAI7B,aAAK,aAAa;AAGlB,YAAIC,GAAcC,GAAmBC;AAGrC,cAAMC,IAAQf,EAAU,CAAC,EAAE,IAAIA,EAAU,CAAC,EAAE,GACtCgB,IAAQhB,EAAU,CAAC,EAAE,IAAIA,EAAU,CAAC,EAAE,GAGtCiB,IAAW,MAAM;AACrB,UAAIL,KAAQ,OACL,KAAA,QAAQ,sBAAsB,sBAAsBK,CAAQ,IAInEJ,KAAatF,EAAaqF,GAAMG,IAAQ,GAAG,CAACA,IAAQ,GAAG,EAAE,GACzDD,KAAavF,EAAaqF,GAAMI,IAAQ,GAAG,CAACA,IAAQ,GAAG,EAAE,GAGzDR,EAAW,OAAO,MAAM;AAAA,YACtB,IAAI,EAAEK,IAAYH,EAAa,IAAIC,EAAgB;AAAA,YACnD,IAAI,EAAEG,IAAYJ,EAAa,IAAIC,EAAgB;AAAA,UAAA,CACpD,GAGDC;AAAA,QAAA;AAIE,SAAA,KAAK,IAAIG,CAAK,IAAI,MAAM,KAAK,IAAIC,CAAK,IAAI,QACrCJ,IAAA,GACPC,IAAYZ,EAAW,IACvBa,IAAYb,EAAW,IAGdgB;MAEb;AAAA,IAAA,CACD;AAGD,IAAAf,EAAY,KAAK,GAGjB,KAAK,SAAS,cAAcA;AAAA,EAC9B;AAAA,EAEA,kBAAkB;AACV,UAAA;AAAA,MACJ,YAAAgB;AAAA,IAAA,IACE,KAAK;AAGT,QAAIC,GAAqBC;AAGnB,UAAAZ,IAAa,IAAIhC,EAAO0C,GAAY;AAAA,MACxC,iBAAiB,MACR,KAAK,OAAO;AAAA,MAClB,SAAS,MAAM;AAChB,cAAM,EAAC,oBAAAG,GAAoB,qBAAAC,MAAuB,KAAK;AAGvD,QAAAH,IAAiB,WAAmBzE,EAAIwE,GAAY,KAAK,CAAC,GAC1DE,IAAkB,WAAmB1E,EAAIwE,GAAY,MAAM,CAAC,GAI5D,cAAcG,CAAkB,GAC5B,OAAOC,KAAwB,YACjC,qBAAqBA,CAAmB;AAAA,MAE5C;AAAA,MAAG,QAAQ,CAAChB,GAAGC,MAAa;AAC1B,cAAM,EAAC,eAAAgB,GAAe,cAAAb,MAAgB,KAAK,QACrC,EAAC,OAAAc,EAAK,IAAI,KAAK,WAGfb,IAAkB,KAAK;AAG7B,YAAI,CAACY;AAAe;AAEpB,cAAME,IAAU,KAAK,IAAIf,EAAa,IAAIa,EAAc,GAAGH,CAAe,GACpEM,IAAS,KAAK,IAAIhB,EAAa,IAAIa,EAAc,GAAGJ,CAAc,GAClEQ,IAAU,KAAK,IAAI,GAAGP,CAAe,GACrCQ,IAAS,KAAK,IAAI,GAAGT,CAAc,GAGnCU,IAAOlE,EAAMyD,IAAkBb,EAAS,IAAIoB,GAASF,CAAO,GAC5DK,IAAMnE,EAAMwD,IAAiBZ,EAAS,IAAIqB,GAAQF,CAAM,GAGxDK,IAAU,CAACF,IAAOlB,EAAgB,IAAID,EAAa,GACnDsB,IAAS,CAACF,IAAMnB,EAAgB,IAAID,EAAa;AAGvD,QAAAhE,EAAIwE,GAAY;AAAA,UACd,MAAM,GAAGW;AAAA,UAAU,KAAK,GAAGC;AAAA,QAAA,CAC5B,GAGDpF,EAAI8E,GAAO;AAAA,UACT,MAAM,GAAGO;AAAA,UAAa,KAAK,GAAGC;AAAA,QAAA,CAC/B;AAAA,MACH;AAAA,IAAA,CACD;AAGD,IAAAxB,EAAW,KAAK,GAGhB,KAAK,SAAS,aAAaA;AAAA,EAC7B;AAAA,EAEA,kBAAkB;AAChB,UAAM,EAAC,UAAAyB,GAAU,YAAAC,MAAc,KAAK,WAI9BC,IAAYF,EAAS,cAAc,iBAAiB;AAG1D,QAAIG,GAAoBC;AAIlB,UAAAC,IAAa,IAAI9D,EAAO2D,GAAW;AAAA,MACvC,iBAAiB,MACR,KAAK,OAAO;AAAA,MAClB,SAAS,CAACrD,MAAW;AACtB,cAAM,EAAC,YAAYyD,MAAU,KAAK;AAGlC,QAAAH,IAAaD,EAAU,sBAAwB,EAAA,OAAO,SAAS,KAAK,YACpEE,IAAc,SAAiB3F,EAAIwF,GAAY,OAAO,GAAG,EAAE,GAI3DK,EAAO,OAAOzD,CAAM;AAAA,MACtB;AAAA,MAAG,QAAQ,CAAC2B,MAAM;AACV,cAAA,EAAC,SAAA+B,EAAO,IAAI,KAAK,UACjB,EAAC,kBAAAC,EAAgB,IAAI,KAAK,QAG1BC,IAAQjC,EAAE,UAAU,SAAYA,EAAE,QAAQA,EAAE,QAAQ,CAAC,EAAE;AAG7D,YAAI,CAACgC;AAAkB;AACvB,cAAME,IAAUhF,EAAM+E,IAAQN,IAAaC,IAAc,GAAG,GAAGI,CAAgB,GACzEpC,IAAY,OAAQmC,IAAU,OAAOG,IAAUF;AAGrD,aAAK,KAAKpC,CAAS;AAAA,MACrB;AAAA,IAAA,CACD;AAGD,IAAAiC,EAAW,KAAK,GAChB,KAAK,SAAS,aAAaA;AAAA,EAC7B;AAAA,EAEA,cAAc;AACZ,SAAK,gBAAgB,GAIjB,KAAK,SAAS,oBAChB,KAAK,QAAQ,iBAAiBvE,EAAY,QAA8B,UAAU,KAAK,OAAO;AAAA,EAElG;AAAA,EAEA,kBAAkB;AAChB,UAAM,EAAC,WAAAgC,GAAW,UAAAkC,MAAY,KAAK;AAuB/B,QAnBC,KAAA,QAAQ,sBAAsBlE,EAAYgC,GAAW,CAAC,aAAa,WAAW,GAAG,MAAM;AAC1F,WAAK,aAAa;AAAA,IAAA,CACnB,GAII,KAAA,QAAQ,qBAAqBhC,EAAYkE,GAAU,CAAC,cAAc,YAAY,GAAG,MAAM;AAC1F,WAAK,OAAO,kBAAkB,IAC9B,KAAK,aAAa,EAAI;AAAA,IAAA,CACvB,GAII,KAAA,QAAQ,qBAAqBlE,EAAYkE,GAAU,CAAC,cAAc,UAAU,GAAG,MAAM;AACxF,WAAK,OAAO,kBAAkB,IAC9B,KAAK,aAAa;AAAA,IAAA,CACnB,GAGG,CAAC,KAAK,SAAS;AACjB;AAEF,UAAM,EAAC,SAAAW,GAAS,QAAAC,MAAU,KAAK;AAG/B,SAAK,QAAQ,cAAc9E,EAAY8E,GAAQ,CAAC,OAAO,GAAG,MAAM;AAC9D,WAAK,KAAK,KAAK,OAAO,aAAa,KAAK,SAAS,YAAY,GAAG;AAAA,IAAA,CACjE,GAGD,KAAK,QAAQ,eAAe9E,EAAY6E,GAAS,CAAC,OAAO,GAAG,MAAM;AAChE,WAAK,KAAK,KAAK,OAAO,aAAa,KAAK,SAAS,YAAY,GAAG;AAAA,IAAA,CACjE;AAAA,EACH;AAAA,EAEA,gBAAgB;AACd,UAAM,EAAC,WAAA7C,GAAW,WAAAtB,MAAa,KAAK,WAI9BqE,IAAe,CAAChE,MAAuB;AAC3C,YAAM,EAAC,QAAAqB,GAAQ,WAAW4C,EAAA,IAAkB,KAAK,QAC3C,EAAC,SAAS/E,EAAU,IAAA;AAG1B,UAAI,CAACmC;AAAQ;AAGP,YAAA7B,IAASQ,EAAO,QAAQ,CAAC,GACzBP,IAASO,EAAO,QAAQ,CAAC;AAG3B,UAAA,EAAER,KAAUC;AACd;AAIF,WAAK,OAAO,UAAU;AAGhB,YAAAyE,IAAavE,EAAU,yBAIvBwE,IAAY7E,EAAuBU,EAAO,OAAO,GAIjDoE,IAAS;AAAA,QACb,IAAI3E,EAAO,QAAQD,EAAO,SAAS,KAAK0E,EAAW,OAAO,SAAS,KAAK;AAAA,QACxE,IAAIzE,EAAO,QAAQD,EAAO,SAAS,KAAK0E,EAAW,MAAM,SAAS,KAAK;AAAA,MAAA,GAInEG,IAAe,CAAC7D,MAAsB;AAIpC,cAAA8D,IAAUhF,EAAuBkB,EAAM,OAAO,GAG9Ce,IAAY0C,KAAkBK,IAAUH,KAAa;AAGtD,aAAA,KAAK5C,GAAW6C,CAAM;AAAA,MAAA,GAIvBG,IAAc,CAACC,MAAqB;AAExC,QAAItF,EAAO,aAAWA,EAAO,UAAU,GACnCA,EAAO,YAAUA,EAAO,SAAS,GACrC,KAAK,OAAO,UAAU,IAElBsF,EAAK,QAAQ,WAAW,KACrB,KAAA,SAAS,YAAY,aAAaA,CAAI;AAAA,MAC7C;AAKF,MAAItF,EAAO,aAAWA,EAAO,UAAU,GACnCA,EAAO,YAAUA,EAAO,SAAS,GAIrCA,EAAO,YAAYD,EAAY,UAAgC,aAAaoF,CAAY,GACxFnF,EAAO,WAAWD,EAAY,UAAgC,YAAYsF,CAAW;AAAA,IAAA;AAIvF,SAAK,QAAQ,aAAatF,EAAYgC,GAAW,cAAc+C,CAAY;AAAA,EAC7E;AAAA,EAEA,cAAc;AAEN,UAAA,EAAC,UAAAS,EAAY,IAAA,MACb,EAAC,WAAA9E,GAAW,WAAAsB,MAAa,KAAK;AAGpC,QAAIyD,IAAe;AAGb,UAAAC,IAAe,CAAChD,MAAkB;AACtC,YAAM,EAAC,QAAAN,GAAQ,WAAAE,MAAa,KAAK;AAG7B,UAAA,CAACkD,EAAS,oBAAoB,CAACpD;AAAQ;AAI3C,WAAK,aAAa;AAMlB,YAAMuD,IAAQ,KAAK,IAAI,IAAI,KAAK,IAAI,GAAGjD,EAAE,cAAc,CAACA,EAAE,UAAU,CAACA,EAAE,MAAM,CAAC,GAGxEkD,IAAetD,KAAa,MAAMqD,IAAQ,MAAiB;AAajE,UAVMC,KAAgB,OAAOA,KAAgBJ,EAAS,UAGrCC,IAAA,IAFCA,KAAA,KAAK,IAAIE,CAAK,GAMhCjD,EAAE,eAAe,GAGb+C,IAAe;AAAmB;AAGhC,YAAAR,IAAavE,EAAU,yBAGvBmF,KAAKnD,EAAE,SAASA,EAAE,UAAUuC,EAAW,OAAO,SAAS,KAAK,aAC5Da,KAAKpD,EAAE,SAASA,EAAE,UAAUuC,EAAW,MAAM,SAAS,KAAK;AAGjE,WAAK,KAAKW,GAAc;AAAA,QACtB,GAAAC;AAAA,QAAG,GAAAC;AAAA,MAAA,CACJ,GAID,KAAK,aAAa;AAAA,IAAA;AAIpB,SAAK,MAAM9F,EAAYgC,GAAW,SAAS0D,CAAY;AAAA,EACzD;AAAA,EAEA,mBAAmB;AACX,UAAA,EAAC,WAAA1D,EAAS,IAAI,KAAK;AAIzB,QAAI+D,IAAY,GAGZC;AAsBQ,IAAAhG,EAAAgC,GAAW,SAnBH,CAACU,MAAkB;AACrC,MAAIqD,MAAc,KAChBA,IAAY,KAAK,OACTC,IAAA;AAAA,QACN,GAAGtD,EAAE;AAAA,QAAO,GAAGA,EAAE;AAAA,MAAA,MAEV,KAAK,IAAI,IAAIqD,IAAY,OAAO,KAAK,IAAIrD,EAAE,QAAQsD,EAAM,CAAC,IAAI,MAAM,KAAK,IAAItD,EAAE,QAAQsD,EAAM,CAAC,IAAI,OACvG,KAAK,OAAO,cAAc,KAAK,SAAS,YAC1C,KAAK,KAAK,GAAG,IAEb,KAAK,UAAU,IAELD,IAAA;AAAA,IAGd,CAIyC;AAAA,EAC7C;AAAA,EAEA,sBAAsB;AACpB,UAAM,EAAC,WAAAzD,GAAW,UAAA2D,MAAY,KAAK;AAC5B,WAAA;AAAA,MACL,GAAGA,EAAS,KAAK3D,IAAY;AAAA,MAAM,GAAG2D,EAAS,KAAK3D,IAAY;AAAA,IAAA;AAAA,EAEpE;AAAA,EAEA,cAAc;AACN,UAAA,EAAC,SAAA4D,GAAS,WAAAnE,EAAa,IAAA,MACvB,EAAC,UAAAF,GAAU,eAAAC,EAAiB,IAAAoE,GAC5B,EAAC,WAAAxF,GAAW,eAAAyF,GAAe,WAAAnE,EAAA,IAAaD,GAGxCqE,IAAW1F,EAAU,cAAc,YAAY;AAI9C,IAAAf,EAAAe,EAAU,iBAAiB,2BAA2B,CAAC;AAI9D,UAAM2F,IAAYxI,EAAc;AAAA,MAC9B,SAAS;AAAA,MAAO,WAAW;AAAA,MAAiB,cAAcsI,EAAc;AAAA,MAAY,QAAQA;AAAA,IAAA,CAC7F;AACA,IAAAE,EAA+B,MAAM,OAAOxE,CAAQ;AAIrD,UAAM4B,IAAQ5F,EAAc;AAAA,MAC1B,SAAS;AAAA,MAAO,WAAW;AAAA,MAA2B,QAAQmE;AAAA,IAAA,CAC/D;AACA,IAAAyB,EAA2B,MAAM,OAAO5B,CAAQ,GAGjD,KAAK,OAAO,SAAS,IAErB,KAAK,UAAU,QAAQ4B,GACvB,KAAK,UAAU,YAAY4C,GAC3B1H,EAAIyH,GAAU,EAAC,SAAS,QAAQ,CAAA,GAIhCzH,EAAI8E,GAAO,EAAC,YAAY,SAAS,CAAA,GAEjC,KAAK,aAAa;AAClB,UAAM6C,IAAc,MAAM;AAExB,MAAA3H,EAAIyH,GAAU,EAAC,SAAS,OAAO,CAAA,GAI/BzH,EAAI8E,GAAO,EAAC,YAAY,UAAU,CAAA,GAI9B3B,KACF,KAAK,kBAAkBA,CAAa,GAKtC,KAAK,OAAO,SAAS,IAIrB,KAAK,qBAAqB,GAG1B,QAAQ,IAAI,KAAK,WAAW,eAAe,+BAA+B,GAEtE,KAAK,WAAW,iBACb,KAAA,WAAW,cAAc,KAAK,aAAa,GAKlD,KAAK,UAAU;AAAA,IAAA,GAIXyE,IAAe,CAAC7D,MAAW;AAC/B,cAAQ,IAAIA,GAAG,SAAS,KAAK,WAAW,YAAY,GACpD/D,EAAIyH,GAAU,EAAC,SAAS,OAAO,CAAA,GAC3B,KAAK,WAAW,gBACb,KAAA,WAAW,aAAa1D,CAAC;AAAA,IAChC;AAIE,IAAAnE,EAAYkF,CAAK,IACP6C,OAEZ,KAAK,QAAQ,YAAYtG,EAAYyD,GAAO,QAAQ6C,CAAW,GAC/D,KAAK,QAAQ,aAAatG,EAAYyD,GAAO,SAAS8C,CAAY;AAAA,EAEtE;AAAA,EAEA,kBAAkBzE,GAAuB;AACvC,UAAM,EAAC,WAAAE,GAAW,WAAAtB,MAAa,KAAK,WAG9B8F,IAAY,KAAK,UAAU,OAG3BC,IAAa5I,EAAc;AAAA,MAC/B,SAAS;AAAA,MACT,WAAW;AAAA,MACX,KAAKiE;AAAA,MACL,QAAQE;AAAA,MACR,OAAOwE,EAAU,MAAM;AAAA,IAAA,CACxB;AAIU,IAAAC,EAAA,MAAM,UAAUD,EAAU,MAAM,SAG3C,KAAK,UAAU,QAAQ9F,EAAU,iBAAiB,WAAW;AAG7D,UAAMgG,IAAqB,MAAM;AAE/B,MAAA/G,EAAO6G,CAAS,GAChB,KAAK,UAAU,QAAQC;AAAA,IAAA;AAKrB,IAAAlI,EAAYkI,CAAU,IACLC,MAEnB,KAAK,QAAQ,iBAAiB1G,EAAYyG,GAAY,QAAQC,CAAkB;AAAA,EAEpF;AAAA,EAEA,uBAAuB;AACrB,UAAM,EAAC,OAAAjD,GAAO,WAAA/C,GAAW,UAAAwD,GAAU,WAAAmC,GAAW,YAAAlC,MAAc,KAAK,WAI3DwC,IAAa,SAAiBhI,EAAI8E,GAAO,OAAO,GAAG,EAAE,GACrDmD,IAAc,SAAiBjI,EAAI8E,GAAO,QAAQ,GAAG,EAAE,GAGvDoD,IAAY,SAAiBlI,EAAI+B,GAAW,OAAO,GAAG,EAAE,GACxDoG,IAAa,SAAiBnI,EAAI+B,GAAW,QAAQ,GAAG,EAAE,GAG1DqG,IAAgB7C,EAAS,aACzB8C,IAAiB9C,EAAS;AAIhC,SAAK,OAAO,eAAe;AAAA,MACzB,GAAG2C;AAAA,MAAWC;AAAA,IAAG;AAIb,UAAAG,IAAiBxD,EAAM,gBAAgBkD,GACvCO,IAAkBzD,EAAM,iBAAiBmD,GAGzCO,IAAQF,IAAiBC,GAEzBE,IAAYH,IAAiBC,KAAmBJ,KAAcD,KAAcM,IAAQL,IAAaD,IAAYA,IAAYM,IAAQL,GAGjIO,IAAYD,IAAWD;AAG7B,SAAK,OAAO,WAAW;AAAA,MACrB,GAAGC;AAAA,MAAU,GAAGC;AAAA,IAAA,GAKlB1I,EAAI8E,GAAO;AAAA,MACT,OAAO,GAAG2D;AAAA,MACV,QAAQ,GAAGC;AAAA,MACX,MAAM,IAAIR,IAAYO,KAAY;AAAA,MAClC,KAAK,IAAIN,IAAaO,KAAa;AAAA,MACnC,UAAU;AAAA,MACV,WAAW;AAAA,IAAA,CACZ;AAID,UAAMC,IAAYF,IAAWC,IAAYN,IAAgBK,IAAWJ,IAAiBK,GAC/EE,IAAaF,IAAYD,IAAWJ,IAAiBK,IAAYN,IAAgBK;AAGvF,SAAK,OAAO,eAAe;AAAA,MACzBE;AAAA,MAAc,GAAGC;AAAA,IAAA,GAInB5I,EAAI0H,GAAW;AAAA,MACb,OAAO,GAAGiB;AAAA,MAAe,QAAQ,GAAGC;AAAA,IAAA,CACrC;AAGD,UAAMhD,IAAaL,EAAS,cAAc,iBAAiB,EAAE;AAExD,SAAA,OAAO,mBAAmBK,IAAaJ,EAAW;AAAA,EACzD;AAAA,EAEA,UAAUqD,IAAU,IAAM;AAClB,UAAA,EAAC,WAAAlF,EAAS,IAAI,KAAK;AAGzB,IAAKkF,MACH,KAAK,OAAO,YAAYlF,IAI1B,KAAK,KAAKA,CAAS;AAAA,EACrB;AAAA,EAEA,OAAO,CAACmF,GAAczB,MAAgB;AACpC,UAAM,EAAC,UAAAR,GAAU,WAAAzD,GAAW,QAAA2F,EAAA,IAAU,MAChC,EAAC,WAAWC,GAAS,UAAA1B,GAAU,cAAA2B,GAAc,kBAAAlD,EAAoB,IAAAgD,GACjE,EAAC,OAAAjE,GAAO,YAAAU,EAAc,IAAApC,GACtB,EAAC,SAAA0C,EAAW,IAAAe;AAGlB,IAAAiC,IAAO,KAAK,MAAM,KAAK,IAAI,KAAKA,CAAI,CAAC,GAC9BA,IAAA,KAAK,IAAIhD,GAASgD,CAAI,GAG7BzB,IAAQA,KAAS;AAAA,MACf,GAAG4B,EAAa,IAAI;AAAA,MAAG,GAAGA,EAAa,IAAI;AAAA,IAAA;AAI7C,UAAMC,IAAU,WAAmBlJ,EAAI8E,GAAO,MAAM,CAAC,GAC/CqE,IAAS,WAAmBnJ,EAAI8E,GAAO,KAAK,CAAC;AAInD,SAAK,aAAa;AAGlB,QAAIZ,IAAO;AAGX,UAAMkF,KAAYH,EAAa,IAAI3B,EAAS,KAAK,GAC3C+B,KAAWJ,EAAa,IAAI3B,EAAS,KAAK,GAC1CgC,IAAYL,EAAa,IAAIG,GAC7BG,IAAaN,EAAa,IAAII,GAG9BG,IAAO,MAAM;AACjB,MAAAtF,KAGIA,IAAO,OACJ,KAAA,QAAQ,YAAY,sBAAsBsF,CAAI;AAIrD,YAAMC,IAAW5K,EAAaqF,GAAM8E,GAASF,IAAOE,GAAS,EAAE,GACzDR,IAAQiB,IAAWT,GAGnBP,IAAWnB,EAAS,IAAImC,IAAW,KACnCf,IAAYpB,EAAS,IAAImC,IAAW;AAG1C,UAAIxD,IAAU,GAAGoB,EAAM,IAAI6B,KAAWV,IAAQnB,EAAM,IAChDqC,IAAS,GAAGrC,EAAM,IAAI8B,KAAUX,IAAQnB,EAAM;AAIxC,MAAApB,IAAA,KAAK,IAAIA,GAASmD,CAAQ,GAC3BM,IAAA,KAAK,IAAIA,GAAQL,CAAO,GAI7BpD,IAAUwC,IAAWa,MACvBrD,IAAUqD,IAAYb,IAIpBiB,IAAShB,IAAYa,MACvBG,IAASH,IAAab,IAIxB1I,EAAI8E,GAAO;AAAA,QACT,QAAQ,GAAG4D;AAAA,QAAe,OAAO,GAAGD;AAAA,QAAc,MAAM,GAAGxC;AAAA,QAAa,KAAK,GAAGyD;AAAA,MAAA,CACjF,GAGD,KAAK,OAAO,YAAYD,GAGxB,KAAK,kBAAkBhB,GAAUC,GAAWzC,GAASyD,CAAM,GAI3D1J,EAAIwF,GAAY;AAAA,QACd,MAAM,IAAIiE,IAAW,QAAQ1D,KAAoB,MAAMD,IAAU;AAAA,MAAA,CAClE,GAIG,KAAK,WAAW,gBACb,KAAA,WAAW,aAAa,KAAK,aAAa;AAAA,IACjD;AAIG,IAAA0D;EAAA;AAAA,EAGP,eAAe,MAAM;AACnB,UAAM,EAAC,oBAAA7E,GAAoB,qBAAAC,GAAqB,WAAA+E,EAAA,IAAa,KAAK;AAClE,kBAAchF,CAAkB,GAC5B,OAAOC,KAAwB,YACjC,qBAAqBA,CAAmB,GAEtC,OAAO+E,KAAc,YACvB,qBAAqBA,CAAS;AAAA,EAChC;AAAA,EAGF,oBAAoB,CAAClB,GAAkBC,GAAmBrD,GAAiBC,MAAmB;AACtF,UAAA,EAAC,WAAAlC,GAAW,QAAA2F,EAAU,IAAA,MACtB,EAAC,YAAAvE,GAAY,OAAAM,EAAS,IAAA1B,GACtB,EAAC,UAAAkE,GAAU,cAAA2B,GAAc,WAAAtF,GAAW,cAAAK,MAAgB+E,GAGpDf,IAAaS,KAAYnB,EAAS,IAAI3D,IAAY,KAClDsE,IAAcS,KAAapB,EAAS,IAAI3D,IAAY,KACpDiG,IAAYvE,KAAW,WAAmBrF,EAAI8E,GAAO,MAAM,CAAC,GAC5D+E,IAAWvE,KAAU,WAAmBtF,EAAI8E,GAAO,KAAK,CAAC,GAGzDK,IAAO,CAACyE,IAAY5F,EAAa,IAAIgE,GACrC5C,IAAM,CAACyE,IAAW7F,EAAa,IAAIiE,GAGnCtC,IAAesD,EAAa,IAAIjF,EAAa,IAAKgE,GAClD8B,IAAgBb,EAAa,IAAIjF,EAAa,IAAKiE;AAGzD,IAAAjI,EAAIwE,GAAY;AAAA,MACd,KAAK,GAAGY;AAAA,MAAS,MAAM,GAAGD;AAAA,MAAU,OAAO,GAAGQ;AAAA,MAAiB,QAAQ,GAAGmE;AAAA,IAAA,CAC3E,GAGD,KAAK,OAAO,gBAAgB;AAAA,MAC1B,GAAGnE;AAAA,MAAa,GAAGmE;AAAA,IAAA;AAAA,EACrB;AAAA,EAGF,eAAe,CAACC,MAAwB;AACtC,UAAM,EAAC,iBAAAC,GAAiB,WAAArG,GAAW,QAAAF,EAAA,IAAU,KAAK,QAC5C,EAAC,UAAA8B,EAAQ,IAAI,KAAK;AAGpB,IAAC,KAAK,SAAS,aAGfyE,KAAmBrG,KAAa,OAAO,CAACF,MAG/B,aAAA,KAAK,QAAQ,eAAe,GAGzC,KAAK,OAAO,kBAAkB,IAG9BzD,EAAIuF,GAAU,EAAC,SAAS,GAAG,eAAe,WAAU,GAG/CwE,MACH,KAAK,QAAQ,kBAAkB,WAAW,KAAK,cAAc,IAAI;AAAA,EACnE;AAAA,EAGF,eAAe,MAAM;AACb,UAAA,EAAC,UAAAxE,EAAQ,IAAI,KAAK;AACxB,IAAAvF,EAAIuF,GAAU,EAAC,SAAS,GAAG,eAAe,QAAO,GACjD,KAAK,OAAO,kBAAkB;AAAA,EAAA;AAAA,EAGhC,UAAU,MAAM;AACd,SAAK,qBAAqB,GAC1B,KAAK,UAAU;AAAA,EAAA;AAAA,EAGjB,KAAKrC,GAAkBC,GAAuB;AAC5C,SAAK,UAAU;AAAA,MACb,UAAAD;AAAA,MAAU,eAAAC;AAAA,IAAA,GAIZ,KAAK,YAAY;AAAA,EACnB;AAAA,EAEA,UAAU;AACR,UAAM,EAAC,WAAApB,GAAW,YAAAkB,MAAc,KAAK;AAE9B,WAAA,QAAQ,KAAK,QAAQ,EAAE,QAAQ,CAAC,CAAG,EAAA4C,CAAM,MAAwB;AACtE,MAAAA,EAAO,QAAQ;AAAA,IAAA,CAChB,GAIM,OAAA,QAAQ,KAAK,OAAO,EAAE,QAAQ,CAAC,CAAG,EAAAoE,CAAW,MAA4B;AAClE,MAAAA;IAAA,CACb,GAID,KAAK,aAAa,GAIXjJ,EAAAe,EAAU,cAAc,UAAU,CAAC,GAI1CpC,EAAYoC,GAAW,cAAc,GAIrCzB,EAAU,SAAS,cAAc,MAAM,GAAkB,UAAU,GAK/D2C,MAAelB,KACjBjB,EAAOmC,CAAU,GAKnBA,EAAW,eAAe,MAGtB,KAAK,WAAW,aAClB,KAAK,WAAW;EAEpB;AACF;AAGAD,EAAY,WAAW;AAAA,EACrB,WAAW;AAAA,EACX,UAAU;AAAA,EACV,SAAS;AAAA,EACT,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,WAAW;AAAA,IACT,QAAQ;AAAA,IAAM,WAAW;AAAA,IAAM,eAAe;AAAA,IAAM,cAAc;AAAA,IAAM,cAAc;AAAA,EACxF;AACF;ACrqCA,MAAMkH,IAAiB;AAAA;AAAA;AAAA;AAKvB,MAAMC,UAAyBnH,EAAY;AAAA,EACzC,YAAa7D,IAAU,IAAI;AACzB,UAAMiL,IAAiBlL,EAAc;AAAA,MACnC,SAAS;AAAA,MACT,WAAW;AAAA,MACX,MAAMgL;AAAA,MACN,QAAQ,SAAS;AAAA,IAAA,CAClB,GAEKnI,IAAYqI,EAAe,cAAc,0BAA0B;AAGzE,UAAMrI,GAAW,EAAE,GAAG5C,GAAS,iBAAiB,IAAO,GAGvD,KAAK,UAAU,aAAaiL,GAE5B,KAAK,sBAAsB;AAAA,EAC7B;AAAA,EACA,wBAAyB;AACjB,UAAA,EAAE,YAAAC,EAAW,IAAI,KAAK,WACtBC,IAAWD,EAAW,cAAc,sBAAsB;AAGhE,SAAK,QAAQ,kBAAkBhJ,EAAYiJ,GAAU,SAAS,KAAK,IAAI;AAAA,EACzE;AAAA,EACA,KAAMpH,GAAmBC,GAAuB;AAE9C,IAAAnD,EAAI,KAAK,UAAU,YAAY,EAAE,SAAS,SAAS,GAG/CkD,KACG,KAAA,KAAKA,GAAUC,CAAa,GAInC,KAAK,QAAQ,iBAAiB9B,EAAY,QAA+B,UAAU,KAAK,OAAO,GAG/FrB,EAAI,SAAS,cAAc,MAAM,GAAkB,EAAE,UAAU,UAAU;AAAA,EAC3E;AAAA,EACA,OAAO,MAAM;AAEX,IAAAA,EAAI,KAAK,UAAU,YAAY,EAAE,SAAS,QAAQ,GAGlDM,EAAU,SAAS,cAAc,MAAM,GAAkB,UAAU,GAG/D,KAAK,QAAQ,kBAAgB,KAAK,QAAQ;EAAe;AAAA,EAE/D,UAAW;AACH,UAAA,EAAE,YAAA+J,EAAW,IAAI,KAAK;AAG5B,UAAM,QAAQ,GAGdrJ,EAAOqJ,CAAU;AAAA,EACnB;AACF;"}